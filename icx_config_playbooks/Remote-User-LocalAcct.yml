---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_cli_ssh_type: paramiko
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    newline_var: "\r"

  tasks:
  - name: Check if Password-Masking is enabled
    icx_command: {commands: show config | incl password-masking}
    register: PwMaskCfg

  - name: Disable Password-Masking
    icx_config: {lines: no enable user password-masking}
    when: PwMaskCfg.stdout[0] is defined and PwMaskCfg.stdout[0] != ''

  - name: Configure Local User Account
    icx_user:
      name: "{{prompt_localacct_user}}"
      configured_password: "{{prompt_localacct_pw}}"
    register: IcxUsrStatus
    failed_when: false

  - name: Parse ICX User Module Error
    set_fact: {ErrMsg: "{{IcxUsrStatus.msg|regex_replace('\n')}}"}
    when: IcxUsrStatus.msg is defined and IcxUsrStatus.msg != ''

  - name: Display ICX User Module Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(newline_var)}}'}
    when: ErrMsg is defined

  - name: Re-enable Password-Masking
    icx_config: {lines: enable user password-masking}
    when: PwMaskCfg.stdout[0] is defined and PwMaskCfg.stdout[0] != ''

  - name: Saving Config
    icx_config: {lines: write memory}

  - name: Get Local Account List
    icx_command: {commands: show user}
    register: AcctList

  - name: Display Local Accounts
    debug: var=AcctList.stdout_lines[0]
