---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    ErrParse: '^.*ConnectionError: '
    EthRe: '(ethernet|etherne|ethern|ether|ethe|eth|et|e)'
    RngRe: 'to[ e]*([0-9])'
    IntRe: '[ e]*([0-9]{1,2}/[0-9])'

  tasks:
  - name: Correct Interface Format
    set_fact: {EthInt: '{{tEthInt|regex_replace(IntRe, " e \1")}}'}
    vars: {tEthInt: '{{prompt_portsec_int|lower|regex_replace(EthRe, "e ")}}'}

  - name: Correct Range Format
    set_fact: {EthInt: '{{EthInt|regex_replace(RngRe, " to \1")}}'}
    when: "'to' in prompt_portsec_int and 'lag' not in prompt_portsec_int"

  - name: Format Interface Range
    set_fact: {EthInt: '{{prompt_portsec_int|regex_replace(RngRe, "e \1 to \2")}}'}
    when: "'to' in prompt_portsec_int"

  - name: Setup Auto-Save Command
    set_fact: {AutoSave: 'autosave {{prompt_portsec_autosave}}'}
    when: prompt_portsec_autosave|default("null", true) != "null"

  - name: Apply Port Security
    icx_config:
      lines: |
         port security
          {{AutoSave|default()}}
          maximum {{prompt_portsec_max|default("1")}}
          enable
      save_when: changed
      parents: interface {{EthInt}}
    register: IcxCfgStatus
    failed_when:
      - IcxCfgStatus.msg is defined
      - "'MODULE FAILURE' not in IcxCfgStatus.msg"

  - name: Parse Switch Error
    set_fact:
      ErrMsg: "{{IcxCfgStatus.module_stderr|regex_replace('\n')|regex_replace(ErrParse)}}"
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(NewlineVar)}}'}
    vars: {NewlineVar: "\r"}
    when: ErrMsg is defined

  - name: Get Port Security Info
    icx_command: {commands: show port security}
    register: PortSecInfo

  - name: Display Port Security Info
    debug: var=PortSecInfo.stdout_lines[0]
