#! Prompt: [{question_name: MSTP Point-to-Point Interface(s), question_description: Enter the MSTP Point-to-Point Interface(s). (e.g. e 1/1/1 or e1/1/1 to 1/1/24), required: false, type: text, variable: prompt_mstp_p2pint, min: 3, max: 1024}, {question_name: MSTP Edge Interface(s), question_description: Enter the MSTP Edge Interface(s). (e.g. e1/1/1 or e1/1/1 to 1/1/24), required: false, type: text, variable: prompt_mstp_edgeint, min: 3, max: 1024}]
# =====================
# Note: L2-MSTP-Config template needs to be applied before running this template.
#       Only interfaces in an MSTP VLAN will be added to config.
---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    NewlineVar: "\r"
    EthRe: '(ethernet|etherne|ethern|ether|ethe|eth|et|e)'
    RngRe: 'to[ e]*([0-9])'
    IntRe: '[ e]*([0-9]{1,2}/[0-9])'

  tasks:
  - {name: Get MSTP Config, icx_command: {commands: show mstp config}, register: MstpCfg}

  - name: Verify MSTP Mode
    assert:
      that: MstpCfg.stdout is defined and MstpCfg.stdout[0] != ''
      fail_msg: "ERROR: L2-MSTP-Config needs to be applied before running this template"

  - name: Setup Point-to-Point Interface Command
    block:
      - name: Correct Interface Format
        set_fact: {P2pInt: '{{tP2pInt|regex_replace(IntRe, " e \1")}}'}
        vars: {tP2pInt: '{{prompt_mstp_p2pint|lower|regex_replace(EthRe, "e ")}}'}

      - name: Correct Range Format
        set_fact: {P2pInt: '{{P2pInt|regex_replace(RngRe, " to \1")}}'}
        when: "'to' in prompt_mstp_p2pint and 'lag' not in prompt_mstp_p2pint"

      - name: Set MSTP Point-to-Point Interface Command
        set_fact: {P2pIntCmd: "mstp admin-pt2pt-mac {{P2pInt}}"}
    when: prompt_mstp_p2pint|default("null", true) != "null"

  - name: Setup Edge Interface Command
    block:
      - name: Correct Interface Format
        set_fact: {EdgeInt: '{{tEdgeInt|regex_replace(IntRe, " e \1")}}'}
        vars: {tEdgeInt: '{{prompt_mstp_edgeint|lower|regex_replace(EthRe, "e ")}}'}

      - name: Correct Range Format
        set_fact: {EdgeInt: '{{EdgeInt|regex_replace(RngRe, " to \1")}}'}
        when: "'to' in prompt_mstp_edgeint and 'lag' not in prompt_mstp_edgeint"

      - name: Set MSTP Edge Interface Command
        set_fact: {EdgeIntCmd: "mstp admin-edge-port {{EdgeInt}}"}
    when: prompt_mstp_edgeint|default("null", true) != "null"

  - name: Configuring MSTP Interface(s)
    icx_config:
      lines: |
        {{P2pIntCmd|default()}}
        {{EdgeIntCmd|default()}}
      save_when: changed
    register: IcxCfgStatus
    failed_when: false

  - name: Parse Switch Error
    set_fact: {ErrMsg: "{{IcxErr|regex_replace('\n')|regex_replace(ErrParse)}}"}
    vars: {ErrParse: '^.*ConnectionError: ', IcxErr: '{{IcxCfgStatus.module_stderr}}'}
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(NewlineVar)}}'}
    when: ErrMsg is defined

  - name: Get MSTP Config
    icx_command: {commands: show run | incl mstp}
    register: MstpCfg

  - name: Display MSTP Config
    debug: var=MstpCfg.stdout_lines[0]
    when: MstpCfg.stdout_lines[0] is defined
