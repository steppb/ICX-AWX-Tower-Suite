#! Description: Updates auto-generated Job Templates in a project.
# ====================
# Required Variables:
# <template_project_name>: Name of project to update.
# <awxlogin_user> & <awxlogin_pass>: Login credentials for REST API.
#
# Optional Variables:
# <template_validate_certs>
- hosts: all
  connection: local
  gather_facts: no
  module_defaults:
    uri:
      validate_certs: '{{template_validate_certs}}'
      method: GET
      user: '{{awxlogin_user}}'
      password: '{{awxlogin_pass}}'
      force_basic_auth: yes
    set_fact:
      cacheable: no
  vars:
    awx_api: https://{{ansible_host}}/api/v2
    yaml_ext: '.yml'
    newline_var: '\\\\n'
    desc_var: '^#! Description: '
    template_validate_certs: no
    template_update_prompts: true
    template_update_descriptions: true
    template_update_comments: true

  tasks:
  - name: Disable Description Update
    set_fact:
      template_update_descriptions: false
    when: "template_update_sections is defined and 'Descriptions' not in template_update_sections"

  - name: Disable Prompt Update
    set_fact:
      template_update_prompt: false
    when: "template_update_sections is defined and 'Prompts' not in template_update_sections"

  - name: Disable Comment Update
    set_fact:
      template_update_comment: false
    when: "template_update_sections is defined and 'Comments' not in template_update_sections"

  - name: Get Project Directory
    uri:
      url: '{{awx_api}}/config/'
    register: awxcfg

  - name: Get Project Info
    uri:
      url: '{{awx_api}}/projects/?name={{template_project_name|urlencode}}'
    register: pjinfo
    failed_when: pjinfo.json.results[0] is not defined

  - name: Set Job Variables
    set_fact:
      pjid: '{{pjinfo.json.results[0].id}}'
      pjpath: "{{awxcfg.json.project_base_dir}}/{{pjinfo.json.results[0].local_path}}"

  - name: Get Playbook List
    uri:
      url: '{{awx_api}}/projects/{{pjid}}/playbooks/'
    register: playbooks

  - name: Get Existing Template List
    uri:
      url: '{{awx_api}}/job_templates/?name={{item|regex_replace(yaml_ext)}}'
    loop: '{{playbooks.json}}'
    register: template_list

  - name: Scrape Prompts
    shell: "grep '^#! Prompt' {{pjpath}}/{{item.json.results[0].playbook}} | sed 's/^.*Prompt: //g'"
    register: rawprompt
    failed_when: false
    changed_when: false
    loop: '{{template_list.results}}'
    when: item.json.results[0] is defined and item.json.results[0].project == pjid|int

  - name: Scrape Descriptions
    shell: "grep '{{desc_var}}' {{pjpath}}/{{item.json.results[0].playbook}} | sed 's/{{desc_var}}//g'"
    register: descriptions
    failed_when: false
    changed_when: false
    loop: '{{template_list.results}}'
    when: item.json.results[0] is defined and item.json.results[0].project == pjid|int

  - name: Scrape Playbook Comments
    shell: grep '^# ' {{pjpath}}/{{item.json.results[0].playbook}} && echo '---'
    register: extra_vars
    failed_when: false
    changed_when: false
    loop: '{{template_list.results}}'
    when: item.json.results[0] is defined and item.json.results[0].project == pjid|int

  - name: Prepare Survey Prompt Payload
    set_fact:
      template_id: "{{item.item.json.results[0].id}}"
      payload:
        name: ''
        description: ''
        spec: "{{item.stdout_lines[0]|from_yaml|regex_replace(newline_var, '\\\\n')}}"
    loop: '{{rawprompt.results}}'
    register: pbprompts
    when: item.stdout_lines[0] is defined

  - name: Add Survey Prompts
    uri:
      url: '{{awx_api}}/job_templates/{{item.ansible_facts.template_id}}/survey_spec/'
      method: POST
      headers:
        Content-Type: "application/json"
      body: "{{item.ansible_facts.payload|regex_replace('@colon',':')|regex_replace('@question','?')}}"
      body_format: json
      timeout: 60
    loop: '{{pbprompts.results}}'
    register: prompt_status
    when: template_update_prompts|bool and item.ansible_facts is defined

  - name: Enable Survey Prompts
    uri:
      url: '{{awx_api}}/job_templates/{{item.item.ansible_facts.template_id}}/'
      method: PATCH
      headers:
        Content-Type: "application/json"
      body:
        survey_enabled: true
      body_format: json
      timeout: 60      
    loop: '{{prompt_status.results}}'
    when: template_update_prompts|bool and item.status is defined and item.status == 200

  - name: Add Descriptions
    uri:
      url: '{{awx_api}}/job_templates/{{item.item.json.results[0].id}}/'
      method: PATCH
      headers:
        Content-Type: "application/json"
      body:
        description: "{{item.stdout_lines[0]}}"
      body_format: json
      timeout: 60
    loop: '{{descriptions.results}}'
    when: template_update_descriptions|bool and item.stdout_lines[0] is defined
    
  - name: Add Comments
    uri:
      url: '{{awx_api}}/job_templates/{{item.item.json.results[0].id}}/'
      method: PATCH
      headers:
        Content-Type: "application/json"
      body:
        extra_vars: "{{item.stdout}}"
      body_format: json
      timeout: 60
    loop: '{{extra_vars.results}}'
    register: dbg_status
    when: template_update_comments|bool and item.stdout_lines[0] is defined and item.item.json.results[0].extra_vars is match("#.*|^$")
