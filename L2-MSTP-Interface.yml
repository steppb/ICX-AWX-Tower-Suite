#! Description: Configure interfaces as MSTP admin-edge or point-to-point ports.
#! Prompt: [{question_name: MSTP Point-to-Point Interface, question_description: Enter the MSTP Point-to-Point Interface(s). (e.g. e 1/1/1 or e1/1/1 to 1/1/24), required: false, type: text, variable: template_l2_mstp_pt2pt, min: 0, max: 1024, default: '', choices: '', new_question: true}, {question_name: MSTP Edge Interface, question_description: Enter the MSTP Edge Interface(s). (e.g. e1/1/1 or e1/1/1 to 1/1/24), required: false, type: text, variable: template_l2_mstp_edgeint, min: 0, max: 1024, default: '', choices: '', new_question: true}]
#! PlaybookVersion: 1.3
# =====================
# Note: L2-MSTP-Config template needs to be applied before running this template.
#       Only interfaces in an MSTP VLAN will be added to config.
---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    EthVar: '(e|et|eth|ethe|ether|ethern|etherne|ethernet)'
    PortVar: '([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2})'
    RngVar: '^.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*to.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*$'
    P2pIntCmd:
    EdgeIntCmd:

  tasks:
  - {name: Get MSTP Config, icx_command: {commands: show mstp config}, register: MstpCfg}

  - name: Verify MSTP Mode
    assert:
      that: MstpCfg.stdout is defined and MstpCfg.stdout[0] != ''
      fail_msg: "ERROR: L2-MSTP-Config needs to be applied before running this template"

  - name: Setup Point-to-Point Interface Command
    block:
      - name: Format Interface List
        set_fact: {P2pInts: '{{EthInts|regex_replace(PortVar, "e \1")}}'}
        vars: {EthInts: '{{template_l2_mstp_pt2pt|regex_replace(EthVar)}}'}
        when: "'to' not in template_l2_mstp_pt2pt"

      - name: Format Interface Range
        set_fact: {P2pInts: '{{EthInts|regex_replace(RngVar, "e \1 to \2")}}'}
        vars: {EthInts: '{{template_l2_mstp_pt2pt}}'}
        when: "'to' in template_l2_mstp_pt2pt"

      - name: Set MSTP Point-to-Point Interface Command
        set_fact: {P2pIntCmd: "mstp admin-pt2pt-mac {{P2pInts}}"}
    when: template_l2_mstp_pt2pt is defined and template_l2_mstp_pt2pt != ''

  - name: Setup Edge Interface Command
    block:
      - name: Format Interface List
        set_fact: {EdgeInts: '{{EthInts|regex_replace(PortVar, "e \1")}}'}
        vars: {EthInts: '{{template_l2_mstp_edgeint|regex_replace(EthVar)}}'}
        when: "'to' not in template_l2_mstp_edgeint"

      - name: Format Interface Range
        set_fact: {EdgeInts: '{{EthInts|regex_replace(RngVar, "e \1 to \2")}}'}
        vars: {EthInts: '{{template_l2_mstp_edgeint}}'}
        when: "'to' in template_l2_mstp_edgeint"

      - name: Set MSTP Edge Interface Command
        set_fact: {EdgeIntCmd: "mstp admin-edge-port {{EdgeInts}}"}
    when: template_l2_mstp_edgeint is defined and template_l2_mstp_edgeint != ''

  - name: Configuring MSTP Interface(s)
    icx_config:
      lines: |
        {{P2pIntCmd}}
        {{EdgeIntCmd}}
      save_when: changed
    register: IcxCfgStatus
    failed_when: false

  - name: Parse Switch Error
    set_fact: {ErrMsg: "{{IcxErr|regex_replace('\n')|regex_replace(ErrParse)}}"}
    vars: {ErrParse: '^.*ConnectionError: ', IcxErr: '{{IcxCfgStatus.module_stderr}}'}
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(NewlineVar)}}'}
    vars: {NewlineVar: "\r"}
    when: ErrMsg is defined

  - name: Get MSTP Config
    icx_command: {commands: show run | incl mstp}
    register: MstpCfg

  - name: Display MSTP Config
    debug: var=MstpCfg.stdout_lines[0]
    when: MstpCfg.stdout_lines[0] is defined
