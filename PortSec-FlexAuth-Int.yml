#! Description: Enable 802.1X on interface.
#! Prompt: [{question_name: Interface or Range@colon, question_description: (e.g. e 1/1/2 to 1/1/4 for range), required: true, type: text, variable: prompt_flexauth_int, min: 5, max: 1024, default: '', choices: ''}]
#
# Playbook Version: 1.2
# =====================

---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    newline_var: "\r"
    ErrParse: '^.*ConnectionError: '
    EthVar: '(e|et|eth|ethe|ether|ethern|etherne|ethernet)'
    PortVar: '([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2})'
    RangeVar: '^.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*to.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*$'

  tasks:
  - name: Format Interface List
    set_fact: {EthInt: '{{prompt_flexauth_int|regex_replace(EthVar)|regex_replace(PortVar, "e \1")}}'}
    when: "'to' not in prompt_flexauth_int"

  - name: Format Interface Range
    set_fact: {EthInt: '{{prompt_flexauth_int|regex_replace(RangeVar, "e \1 to \2")}}'}
    when: "'to' in prompt_flexauth_int"

  - name: Configuring FlexAuth on Interface
    icx_config:
      lines: |
         dot1x-enable
          enable {{EthInt}}
          exit
         interface {{EthInt}}
          dot1x port-control auto
      save_when: changed
    register: IcxCfgStatus
    failed_when:
      - IcxCfgStatus.msg is defined
      - "'MODULE FAILURE' not in IcxCfgStatus.msg"

  - name: Parse Switch Error
    set_fact:
      ErrMsg: "{{IcxCfgStatus.module_stderr|regex_replace('\n')|regex_replace(ErrParse)}}"
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(newline_var)}}'}
    when: ErrMsg is defined

  - name: Get 802.1X Config
    icx_command: {commands: show dot1x config all}
    register: Dot1xConfig

  - name: Display 802.1X Config
    debug: var=Dot1xConfig.stdout_lines[0]
