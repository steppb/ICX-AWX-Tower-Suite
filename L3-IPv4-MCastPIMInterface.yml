#! Description: Enable IPv4 PIM-Sparse on a router interface.
#! Prompt: [{question_name: PIM Interface, question_description: Enter the Interface (e.g. ve20 or e1/1/1), required: true, type: text, variable: prompt_pimint, min: 0, max: 1024, default: '', choices: '', new_question: true}]
#
# Playbook Version: 1.2
# =====================
# Note: L3-IPv4-MCastPIM needs to be applied before running this template.
---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    newline_var: "\r"
    error_parse: '^.*ConnectionError: '

  tasks:
  - name: Get Global PIM Config
    icx_command: {commands: show run | incl ^router pim}
    register: pimrtr_status

  - name: Verify Global PIM Config
    assert:
      that: pimrtr_status is defined and pimrtr_status.stdout[0] != ''
      fail_msg: "ERROR: L3-IPv4-MCastPIM needs to be applied before running this template"

  - name: Enable PIM-Sparse on Interface
    icx_config: {lines: ip pim-sparse, parents: 'interface {{prompt_pimint}}', save_when: changed}
    register: icxconfig_status
    failed_when: false

  - name: Parse Switch Error
    set_fact:
      error_msg: "{{icxconfig_status.module_stderr|regex_replace('\n')|regex_replace(error_parse)}}"
    when: icxconfig_status.rc is defined and icxconfig_status.rc == 1

  - name: Display Switch Error
    assert: {that: error_msg is not defined, fail_msg: '{{error_msg.split(newline_var)}}'}
    when: error_msg is defined

  - name: Get PIM Interface Info
    icx_command: {commands: 'show ip pim interface {{prompt_pimint}}'}
    register: output

  - name: Display PIM Interface Info
    debug: var=output.stdout_lines[0]
