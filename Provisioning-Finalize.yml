---
- hosts: all
  connection: local
  gather_facts: no
  module_defaults:
    uri:
      validate_certs: '{{host_validate_certs|default(false)}}'
      method: PATCH
      user: '{{awxlogin_user}}'
      password: '{{awxlogin_pass}}'
      force_basic_auth: yes
      timeout: 60
  vars:
    NewlineVar: "\r"
    ErrParse: '^.*ConnectionError: '
    ZtpCfg: '{{icx_ztp_cfg}}'
    PortVar: '(^e.*[0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}|^ve.*[0-9]{1,4})'
    NewHostname: '{{icx_ztp_cfg.hostname_pool.next_name|default("null", true)}}'
    AwxApi: '{{icx_ztp_cfg.general.awx_api_cb}}'

  tasks:
  - name: Get Info for Current Host
    uri:
      url: '{{AwxApi}}/hosts/?name={{inventory_hostname|urlencode}}'
      method: GET
    no_log: '{{not log_secure_tasks}}'
    register: rHostInfo

  - name: Hostname Configuration
    block:
    - name: Configure Hostname
      icx_config: {lines: "hostname {{NewHostname}}", save_when: changed}
      failed_when: false
      register: rHnCfg
      connection: network_cli
      vars:
        ansible_network_os: icx
        ansible_become: true
        ansible_become_method: enable

    - name: Check For Config Error
      assert:
        that: rHnCfg.rc|default(0) != 1
        fail_msg: '{{tErr.split(NewlineVar)}}'
      vars:
        tRawErr: '{{rHnCfg.module_stderr|default()}}'
        tErr: "{{tRawErr|regex_replace('\n')|regex_replace(ErrParse)}}"

    - name: Update Host Name in AWX
      uri:
        url: '{{AwxApi}}/hosts/{{rHostInfo.json.results[0].id}}/'
        headers: {Content-Type: 'application/json'}
        body: {name: '{{NewHostname}}'}
        body_format: json
      no_log: '{{not log_secure_tasks}}'

    - name: Update Hostname Config
      set_fact:
        ZtpCfg: '{{ZtpCfg|combine(tHnCfg, recursive=true)}}'
        HnChange: true
      vars:
        tHnId: '{{NewHostname|regex_replace(bHnBase)}}'
        tFmt: "%0{{tHnId|length}}d"
        tHnCfg:
          hostname_pool:
            next_name: "{{bHnBase}}{{tFmt|format(tHnId|int + 1)}}"
    vars:
      bHnBase: '{{icx_ztp_cfg.hostname_pool.base_name|default("null", true)}}'
    when:
      - NewHostname != "null"
      - bHnBase != "null"
      - bHnBase in NewHostname
      - bHnBase not in inventory_hostname

  - name: Static IP Pool
    block:
      - name: Find Current Management Interface
        icx_command: {commands: 'show ip interface | include {{ansible_host}}'}
        register: rIpInt
        connection: network_cli

      - name: Apply Static IP Configuration
        icx_config:
          lines: ip address {{bZtpIpCfg.next_ip}}
                 {{bZtpIpCfg.subnet|iptest("get_mask")}}
          parents: int {{tStaticInt|default(tDynInt, true)}}
          save_when: changed
        failed_when: false
        register: rIpCfg
        connection: network_cli
        vars:
          tIsDynIntMgmt: '{{rIpInt.stdout[0].split(" ")[1]
                           |regex_search("^m") == "m"}}'
          tIsStaticIntMgmt: '{{bZtpIpCfg.interface|regex_search("^m") == "m"}}'
          tDynPortNum: '{{rIpInt.stdout[0].split(" ")[1]}}'
          tStaticPortNum: '{{bZtpIpCfg.interface|regex_search(PortVar)}}'
          tDynInt: '{{"mana1" if tIsDynIntMgmt else tDynPortNum}}'
          tStaticInt: '{{"mana1" if tIsStaticIntMgmt else tStaticPortNum}}'

      - name: Check For Config Error
        assert:
          that: rIpCfg.rc|default(0) != 1
          fail_msg: '{{tErr.split(NewlineVar)}}'
        vars:
          tRawErr: '{{rIpCfg.module_stderr|default()}}'
          tErr: "{{tRawErr|regex_replace('\n')|regex_replace(ErrParse)}}"
        when: '"timeout value" not in rIpCfg.module_stderr|default()'

      - name: Write Memory if IP Address Replaced
        icx_config: {lines: write mem}
        connection: network_cli
        failed_when: false
        register: rWrMem
        vars: {ansible_host: '{{bZtpIpCfg.next_ip}}'}
        when:
          - rIpCfg.rc|default(0) == 1
          - '"timeout value" in rIpCfg.module_stderr'

      - name: Update AWX Host IP Address
        uri:
          url: '{{AwxApi}}/hosts/{{rHostInfo.json.results[0].id}}/'
          headers: {Content-Type: 'application/json'}
          body:
            variables: >-
              ansible_host: '{{bZtpIpCfg.next_ip}}'
          body_format: json
        no_log: '{{not log_secure_tasks}}'

      - name: Increment Next Static IP
        set_fact:
          ZtpCfg: '{{ZtpCfg|combine(tIpCfg, recursive=true)}}'
          IpChange: true
        vars:
          tIpCfg:
            static_ip_pool: {next_ip: '{{bZtpIpCfg.next_ip|iptest("add")}}'}
    vars:
      bZtpIpCfg: '{{ZtpCfg.static_ip_pool}}'
      ansible_network_os: icx
      ansible_become: true
      ansible_become_method: enable
    when: bZtpIpCfg.pool[0]|default("null", true) != "null"

  - name: Update Inventory Variables
    uri:
      url: '{{AwxApi}}/inventories/{{awx_inventory_id}}/'
      headers: {Content-Type: 'application/json'}
      body:
        variables: >-
          {{tZtpCfg|to_nice_yaml(indent=2)}}
      body_format: json
    no_log: '{{not log_secure_tasks}}'
    vars: {tZtpCfg: {icx_ztp_cfg: '{{ZtpCfg}}'}}
    when: HnChange|default(false) or IpChange|default(false)

  - name: Display Error Message
    debug: var=ErrMsg
    when: ErrMsg is defined
