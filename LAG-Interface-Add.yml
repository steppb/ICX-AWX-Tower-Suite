#! Description: Create and deploy a new LAG.
#! Prompt: [{question_name: New LAG Name, question_description: Enter a name for the new LAG@colon, required: true, type: text, variable: template_lag_name, min: 1, max: 64}, {question_name: LAG Mode, question_description: Select the LAG Mode@colon, required: true, type: multiplechoice, variable: template_lag_mode, choices: dynamic\nstatic\nkeep-alive}, {question_name: LAG ID, question_description: Enter the LAG ID@colon (Optional), required: false, type: integer, variable: template_lag_id, min: 0, max: 2047}, {question_name: LAG Ports, question_description: Enter the LAG ports@colon (e.g. e 1/1/1 e 1/1/2), required: true, type: text, variable: template_lag_port, min: 5, max: 1024}]
# =====================
---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    NewlineVar: "\r"
    ErrParse: '^.*ConnectionError: '
    EthRe: '(ethernet|etherne|ethern|ether|ethe|eth|et|e)'
    PortRe: '([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2})'
    RngRe: '^.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*to.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*$'
    PrimaryPortRe: '^e ([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*$'

  tasks:
  - name: Gather Hardware Info
    icx_facts: {gather_subset: hardware}    
    when: ansible_net_image is not defined

  - name: Parse Version
    set_fact: {SwVer: '{{ansible_net_image|regex_replace("^.*([0-9]{5}).*$", "\1")}}'}

  - name: Set LAG ID
    set_fact: {LagId: 'id {{template_lag_id}}'}
    when: "template_lag_id is defined and 'keep-alive' not in template_lag_mode"

  - name: Set Automatic LAG ID
    set_fact: {LagId: id auto}
    when: template_lag_id is not defined and SwVer|int >= 8061

  - name: Format Interface List
    set_fact: {EthInt: '{{tEthInt|regex_replace(PortRe, "e \1")}}'}
    vars: {tEthInt: '{{template_lag_port|regex_replace(EthRe)}}'}
    when: "'to' not in template_lag_port"

  - name: Format Interface Range
    set_fact: {EthInt: '{{template_lag_port|regex_replace(RngRe, "e \1 to \2")}}'}
    when: "'to' in template_lag_port"

  - name: Set Legacy LAG Commands
    set_fact:
      PrimaryPortCmd: 'primary-port {{EthInt|regex_replace(PrimaryPortRe, "\1")}}'
      DeployCmd: deploy
    when: SwVer|int < 8061

  - name: Adding Ports to Lag
    icx_config:
      lines: |
        lag {{template_lag_name}} {{template_lag_mode}} {{LagId|default()}}
        ports {{EthInt}}
        {{PrimaryPortCmd|default()}}
        {{DeployCmd|default()}}
      save_when: changed
    register: IcxCfgStatus
    failed_when: IcxCfgStatus.msg is defined and "MODULE FAILURE" not in IcxCfgStatus.msg

  - name: Parse Switch Error
    set_fact:
      ErrMsg: "{{IcxCfgStatus.module_stderr|regex_replace('\n')|regex_replace(ErrParse)}}"
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(NewlineVar)}}'}
    when: ErrMsg is defined

  - name: Get LAG Config
    icx_command: {commands: 'show lag {{template_lag_name}}'}
    register: LagCfg

  - name: Display LAG Config
    debug: var=LagCfg.stdout_lines[0]
