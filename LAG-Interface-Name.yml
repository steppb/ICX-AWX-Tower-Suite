#! Description: Set the port-name of a LAG port.
#! Prompt: [{question_name: LAG Name, question_description: Enter LAG name@colon, required: true, type: text, variable: template_lag_name, min: 1, max: 64, default: '', choices: '', new_question: true}, {question_name: LAG Port, question_description: Enter the LAG port number@colon (e.g. 1/1/1), required: true, type: text, variable: template_lag_port, min: 5, max: 8, default: '', choices: ''}, {question_name: LAG Port Name, question_description: Enter the name of the port@colon, required: true, type: text, variable: template_lag_portname, min: 0, max: 1024, default: '', choices: '', new_question: true}]
#
# Playbook Version: 1.2
# =====================
# Note: LAG-Interface-Add needs to be applied before running this template.
---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    newline_var: "\r"
    error_parse: '^.*ConnectionError: '
    port_var: '^.*([0-9]{1,2}/[0-9]{1,2}/[0-9]{1,2}).*$'

  tasks:
  - name: Get LAG Config
    icx_command: {commands: 'sh run | include lag {{template_lag_name}}'}
    register: lag_status

  - name: Verify LAG Config
    assert:
      that: lag_status is defined and lag_status.stdout[0] != ''
      fail_msg: "ERROR: LAG-Interface-Add needs to be applied before running this template"

  - name: Format Port Number
    set_fact: {lagport: '{{template_lag_port|regex_replace(port_var, "\1")}}'}

  - name: Configuring LAG Port Name
    icx_config:
      lines: |
        lag {{template_lag_name}}
        port-name {{template_lag_portname}} ethernet {{lagport}}
      save_when: changed
    register: icxconfig_status
    failed_when: false

  - name: Parse Switch Error
    set_fact:
      error_msg: "{{icxconfig_status.module_stderr|regex_replace('\n')|regex_replace(error_parse)}}"
    when: icxconfig_status.rc is defined and icxconfig_status.rc == 1

  - name: Display Switch Error
    assert: {that: error_msg is not defined, fail_msg: '{{error_msg.split(newline_var)}}'}
    when: error_msg is defined

  - name: Get LAG Config
    icx_command: {commands: 'show lag brief {{template_lag_name}}'}
    register: output

  - name: Display LAG Config
    debug: var=output.stdout_lines[0]
