#! Description: Setup and start initial MSTP configuration.
#! Prompt: [{question_name: MSTP Name, question_description: Enter the MSTP configuration name, required: true, type: text, variable: template_l2_mstpname, min: 0, max: 1024, default: '', choices: '', new_question: true}, {question_name: MSTP Revision, question_description: Enter the MSTP revision level, required: true, type: integer, variable: template_l2_mstprev, min: 0, max: 65535, default: 0, choices: '', new_question: true}, {question_name: MSTP Instance ID, question_description: Enter the MSTP Instance ID, required: true, type: integer, variable: prompt_inst, min: 0, max: 4094, default: 0, choices: '', new_question: true}, {question_name: MSTP VLAN Range, question_description: Enter a single VLAN or a range of VLANs to add to the MSTP instance., required: true, type: text, variable: prompt_vlans, min: 0, max: 1024, default: 1-4000, choices: '', new_question: true}]
#! PlaybookVersion: 1.3
# =====================
# Note: This template needs to be run before running other L2-MSTP templates.
---
- hosts: all
  connection: network_cli
  gather_facts: no
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    ansible_command_timeout: 90
    MstpInstCmd: 'mstp instance {{prompt_inst}} vlan'
    CfgMgmtVlan: false
    RngCmd:
    LRngCmd:
    URngCmd:
    MgmtVlanCmd:
    VlanCmd:

  tasks:
  - name: Get Management VLAN
    block:
      - name: Find MGMT IP Interface
        icx_command: {commands: 'show ip interface | incl {{ansible_host}}'}
        register: IpIntInfo

      - name: Save IP Interface
        set_fact: {ip_int: '{{IpIntInfo.stdout[0].split(" ")}}'}
        when: IpIntInfo.stdout is defined and IpIntInfo.stdout[0] != ''

      - name: Format Interface String
        set_fact: {ve_int: 'router-interface ve {{ip_int[1]}}'}
        when: ip_int[0]|lower == 've'

      - name: Get VLAN List
        icx_command: {commands: 'show run vlan | include by port|router-interface'}
        register: VlanList
        when: ip_int[0]|lower == 've'

      - name: Get Management VLAN
        set_fact: {mvlan: '{{VlanList.stdout_lines[0][idx - 1].split(" ")}}'}
        when: ip_int[0]|lower == 've' and ve_int in item
        loop: '{{VlanList.stdout_lines[0]}}'
        loop_control: {index_var: idx}

  - name: Format VLAN Range
    set_fact: {prompt_vlans: '{{prompt_vlans|regex_replace(" to ", "-")}}'}
    when: "' to ' in prompt_vlans"

  - name: Ensure Single VLAN not Management
    assert:
      that: prompt_vlans|int != mvlan[1]|int
      fail_msg: "Connectivity will be lost if Management VLAN is added to MSTP Instance before starting"
    when: "'-' not in prompt_vlans"

  - name: Convert VLAN Range to List
    set_fact: {vrange: '{{prompt_vlans.split("-")}}'}
    when: "'-' in prompt_vlans"

  - name: Set Management VLAN Command
    set_fact: {CfgMgmtVlan: true, MgmtVlanCmd: '{{MstpInstCmd}} {{mvlan[1]}}'}
    when:
      - "'-' in prompt_vlans"
      - mvlan[1] is defined
      - mvlan[1]|int >= vrange[0]|int
      - mvlan[1]|int <= vrange[1]|int

  - name: Set VLAN Range Command
    set_fact: {RngCmd: '{{MstpInstCmd}} {{vrange[0]}} to {{vrange[1]}}'}
    when: not CfgMgmtVlan|bool

  - name: Set Lower VLAN Range Command
    set_fact: {LRngCmd: '{{MstpInstCmd}} {{vrange[0]}} to {{mvlan[1]|int - 1}}'}
    when:
      - "'-' in prompt_vlans"
      - mvlan[1] is defined
      - vrange[0]|int < mvlan[1]|int
      - CfgMgmtVlan|bool

  - name: Set Upper VLAN Range Command
    set_fact: {URngCmd: '{{MstpInstCmd}} {{mvlan[1]|int + 1}} to {{vrange[1]}}'}
    when:
      - "'-' in prompt_vlans"
      - mvlan[1] is defined
      - vrange[1]|int > mvlan[1]|int
      - CfgMgmtVlan|bool

  - name: Set Single VLAN Command
    set_fact: {VlanCmd: '{{MstpInstCmd}} {{prompt_vlans}}'}
    when: "'-' not in prompt_vlans"

  - name: Configuring MSTP
    icx_config:
      lines: |
        mstp scope pvst
        mstp name {{template_l2_mstpname}}
        mstp revision {{template_l2_mstprev}}
        {{RngCmd}}
        {{LRngCmd}}
        {{URngCmd}}
        {{VlanCmd}}
        mstp start
        {{MgmtVlanCmd}}
      save_when: changed
    register: IcxCfgStatus
    failed_when: false

  - name: Parse Switch Error
    set_fact:
      ErrMsg: "{{IcxCfgStatus.module_stderr|regex_replace('\n')|regex_replace(ErrParse)}}"
    vars: {ErrParse: '^.*ConnectionError: '}
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(NewlineVar)}}'}
    vars: {NewlineVar: "\r"}
    when: ErrMsg is defined

  - name: Get MSTP Config
    icx_command: {commands: show mstp configuration}
    register: MstpCfg

  - name: Display MSTP Config
    debug: var=MstpCfg.stdout_lines[0]
    when: MstpCfg.stdout_lines[0] is defined
