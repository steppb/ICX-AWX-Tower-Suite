- {name: Get Pip Packages, pip_package_info: {clients: ['pip', 'pip3']}, register: PipInfo}

- name: Install 'pexpect' Package
  pip: {name: pexpect, extra_args: --retries 0}
  failed_when: false
  register: PexpectStatus
  when: PipInfo.packages.pip.pexpect is not defined

- {name: Get Projects Directory, uri: {url: '{{AwxApi}}/config/'}, register: AwxCfg}

- name: Create Directory for Image Repo in Projects Directory
  file:
    path: '{{AwxCfg.json.project_base_dir}}/{{prompt_project_name}}'
    state: directory
  register: ImgRepoProjectDir

- name: Download Image from TFTP Server
  block:
  - name: Verify File Type
    assert:
      that: prompt_tftp_filepath|basename|splitext|last is in ValidFileTypes
      fail_msg: "{{prompt_tftp_filepath|basename|splitext|last}} is not a valid file type"

  - name: Install 'tftpy' Package
    pip: {name: tftpy}
    when:
      - PipInfo.packages.pip.tftpy is not defined
      - PipInfo.packages.pip3.tftpy is not defined

  - name: Download Image via TFTP
    tftpy:
      host: '{{prompt_tftp_srv_ip}}'
      filename: '{{prompt_tftp_filepath}}'
      output: '{{ImgRepoProjectDir.path}}/{{prompt_tftp_filepath | basename}}'
  connection: ssh
  vars:
    ansible_become: true
    ansible_become_method: sudo
  when:
    - prompt_tftp_srv_ip is defined
    - prompt_tftp_filepath is defined

- name: Search for Binary Files in Repo
  find:
    paths: '{{ImgRepoProjectDir.path}}'
    recurse: yes
    patterns: '*.bin'
  register: ImgRepoFileReg

- {name: Load Platform Support Lookup Table, include_vars: platform_support_table.yml}

- name: Populate Image Table
  include_tasks: create_imagefile_entry.yml
  loop: '{{ImgRepoFileReg.files|sort(attribute="path")}}'
  loop_control: {loop_var: ImgRepoFile, index_var: idx}
  vars:
    ImgRepoFilePath: '{{ImgRepoFile.path}}'
    ImgRepoFileName: '{{ImgRepoFile.path|basename}}'
  when: ImgRepoFileReg.files is defined

- name: Store File List and Create Utility Templates
  block:
  - name: Store IP Address of AWX Server
    set_fact: {RemoteServerIp: '{{ansible_host}}'}
    register: AwxSvrIp

  - name: Store File Entry List in AWX Host Facts
    set_fact: {ansible_image_repo_files: '{{SwImgList}}', cacheable: yes}
    register: ImgRepoFileList

  - name: Store Boot File Entry List in AWX Host Facts
    set_fact: {ansible_image_repo_boot_files: '{{BootImgList|default()}}', cacheable: yes}
    register: ImgRepoBootFileList

  - name: Create Path for File Entry Variable File
    file:
      path: '{{ImgRepoProjectDir.path}}/host_vars'
      state: directory

  - name: Create File Entry Variable File in Image Repo Directory
    template:
      src: all.yml.j2
      dest: '{{ImgRepoProjectDir.path}}/host_vars/all.yml'
      mode: 0644

  - name: Get This Template Info
    uri: {url: '{{AwxApi}}/job_templates/{{awx_job_template_id}}/'}
    register: ThisTemplate

  - name: Check For Existing 'Image-Flash-Copy' Template
    uri: {url: '{{AwxApi}}/job_templates/?name=Image-Flash-Copy'}
    register: ImgFlCpTemplate

  - name: Check For Existing 'Image-Flash-Copy-File' Template
    uri: {url: '{{AwxApi}}/job_templates/?name=Image-Flash-Copy-File'}
    register: ImgFlCpFileTemplate

  - name: Check For Existing 'Image-Flash-Copy-Version' Template
    uri: {url: '{{AwxApi}}/job_templates/?name=Image-Flash-Copy-Version'}
    register: ImgFlCpVerTemplate

  - name: Rename 'Image-Flash-Copy' Template
    uri:
      url: '{{AwxApi}}/job_templates/{{ImgFlCpTemplate.json.results[0].id}}/'
      method: PATCH
      headers: {Content-Type: "application/json"}
      body: {name: "Image-Flash-Copy-File"}
      body_format: json
    when: ImgFlCpTemplate.json.count > 0 and
          ImgFlCpFileTemplate.json.count == 0

  - name: Store 'Image-Flash-Copy' Template Info
    set_fact: {CopyFileTemplateInfo: '{{ImgFlCpTemplate.json.results[0]}}'}
    when: ImgFlCpTemplate.json.count > 0

  - name: Store 'Image-Flash-Copy-File' Template Info
    set_fact: {CopyFileTemplateInfo: '{{ImgFlCpFileTemplate.json.results[0]}}'}
    when: ImgFlCpFileTemplate.json.count > 0

  - name: Store 'Image-Flash-Copy-Version' Template Info
    set_fact: {CopyVerTemplateInfo: '{{ImgFlCpVerTemplate.json.results[0]}}'}
    when: ImgFlCpVerTemplate.json.count > 0

  - name: Create 'Image-Flash-Copy-File' Template
    block:
    - name: Create 'Image-Flash-Copy-File' Template
      uri:
        url: '{{AwxApi}}/job_templates/'
        method: POST
        headers: {Content-Type: "application/json"}
        body:
          name: Image-Flash-Copy-File
          description: "Copy file(s) to switch"
          project: '{{ThisTemplate.json.project}}'
          playbook: Image-Management.yml
          ask_limit_on_launch: true
          ask_inventory_on_launch: true
          ask_credential_on_launch: true
        body_format: json
        status_code: 201
      register: NewImgFlCpFileTemplate

    - name: Store 'Image-Flash-Copy-File' Template Info
      set_fact: {CopyFileTemplateInfo: '{{NewImgFlCpFileTemplate.json}}'}
    when: ImgFlCpTemplate.json.count == 0 and
          ImgFlCpFileTemplate.json.count == 0

  - name: Create 'Image-Flash-Copy-Version' Template
    block:
    - name: Create 'Image-Flash-Copy-Version' Template
      uri:
        url: '{{AwxApi}}/job_templates/'
        method: POST
        headers: {Content-Type: "application/json"}
        body:
          name: Image-Flash-Copy-Version
          description: "Update switch(es) to selected version"
          project: '{{ThisTemplate.json.project}}'
          playbook: Image-Management.yml
          ask_limit_on_launch: true
          ask_inventory_on_launch: true
          ask_credential_on_launch: true
        body_format: json
        status_code: 201
      register: NewImgFlCpVerTemplate

    - name: Store 'Image-Flash-Copy-Version' Template Info
      set_fact: {CopyVerTemplateInfo: '{{NewImgFlCpVerTemplate.json}}'}
    when: ImgFlCpVerTemplate.json.count == 0

  - {name: Sort List, set_fact: {SwImgVerList: "{{SwImgVerList|unique|sort|join('\n')}}"}}
  - {name: Load Survey Spec Variables, include_vars: img_fl_cp_surveys.yml}

  - name: Add Survey Prompts for AWX SSH Credential Input
    set_fact:
      SurveyCpByFile: '{{SurveyCpByFile + SshCredSurvey}}'
      SurveyCpByVer: '{{SurveyCpByVer + SshCredSurvey}}'
    when: not PexpectStatus.changed|bool and PexpectStatus.skipped is not defined

  - name: Create 'Image-Flash-Copy-File' Survey Prompt
    uri:
      url: '{{AwxApi}}/job_templates/{{CopyFileTemplateInfo.id}}/survey_spec/'
      method: POST
      headers: {Content-Type: 'application/json'}
      body:
        name: ''
        description: ''
        spec: '{{SurveyCpByFile}}'
      body_format: json

  - name: Create 'Image-Flash-Copy-Ver' Survey Prompt
    uri:
      url: '{{AwxApi}}/job_templates/{{CopyVerTemplateInfo.id}}/survey_spec/'
      method: POST
      headers: {Content-Type: 'application/json'}
      body:
        name: ''
        description: ''
        spec: '{{SurveyCpByVer}}'
      body_format: json

  - name: Enable 'Image-Flash-Copy-File' Survey Prompt
    uri:
      url: '{{AwxApi}}/job_templates/{{CopyFileTemplateInfo.id}}/'
      method: PATCH
      headers: {Content-Type: "application/json"}
      body:
        survey_enabled: true
        extra_vars: >-
          template_image_repo_dir: {{ImgRepoProjectDir.path}}
      body_format: json

  - name: Enable 'Image-Flash-Copy-Ver' Survey Prompt
    uri:
      url: '{{AwxApi}}/job_templates/{{CopyVerTemplateInfo.id}}/'
      method: PATCH
      headers: {Content-Type: "application/json"}
      body:
        survey_enabled: true
        extra_vars: >-
          template_image_repo_dir: {{ImgRepoProjectDir.path}}
      body_format: json
  when: SwImgList is defined
