---
- name: Get Inventory Count
  uri: {url: '{{AwxApi}}/inventories/'}
  register: rInvNum

- name: Get Inventories
  uri: {url: '{{AwxApi}}/inventories/?page_size={{rInvNum.json.count}}'}
  register: rInvs

- name: Store Variables From Inventory
  set_fact:
    ZtpInvInfo: '{{tZtpInvInfo|default()}}'
    ZtpInvCfg: '{{tZtpInvInfo[0].variables|from_yaml|default({}, true)}}'
  vars:
    tZtpInvInfo: '{{rInvs.json.results|selectattr("name", "==", ZtpInv)|list}}'

- name: Setup General ZTP Config
  set_fact: {ZtpCfg: '{{ZtpInvCfg.icx_ztp_cfg|default({})|combine(tGenCfg)}}'}
  vars:
    tGenCfgOld: '{{ZtpInvCfg.icx_ztp_cfg.general|default({})}}'
    tGenCfg:
      general:
        default_pass: '{{tGenCfgOld.default_pass|default(ZtpDefPass, true)}}'
        workflow: '{{tGenCfgOld.workflow|default()}}'
        awx_api_cb: '{{AwxApi}}'

- name: Create ZTP Inventory
  uri:
    url: '{{AwxApi}}/inventories/'
    method: POST
    headers: {Content-Type: "application/json"}
    body: {name: '{{ZtpInv}}', organization: '{{bOrgId}}'}
    body_format: json
    status_code: 201
  register: rNewInv
  when: ZtpInvInfo[0] is not defined

- name: Append IP Pool Config
  set_fact: {ZtpCfg: '{{ZtpCfg|combine(IpPoolCfg)}}'}
  when: IpPoolCfg is defined

- name: Append Hostname Pool Config
  set_fact: {ZtpCfg: '{{ZtpCfg|combine(HnPoolCfg)}}'}
  when: HnPoolCfg is defined

- name: Update Inventory Config
  uri:
    url: '{{AwxApi}}/inventories/{{tInvId}}/'
    method: PATCH
    headers: {Content-Type: 'application/json'}
    body:
      variables: >-
        {{tZtpCfg|to_nice_yaml(indent=2)}}
    body_format: json
  vars:
    tInvId: '{{rNewInv.json.id|default(ZtpInvInfo[0].id)}}'
    tVars: {icx_ztp_cfg: '{{ZtpCfg}}'}
    tZtpCfg: '{{ZtpInvCfg|combine(tVars)}}'
