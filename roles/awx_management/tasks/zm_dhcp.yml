---
- name: Install and Configure DHCP
  block:
  - name: Install DHCP
    block:
    - name: Install DHCP Server
      package:
        name: '{{bDistDhcp[HostDist].pkg_name|default("isc-dhcp-server")}}'
        state: present

    - name: Allow DHCP to Run Webhook
      block:
      - name: Add AppArmor entry for 'awx_dhcp_webhook'
        lineinfile:
          path: /etc/apparmor.d/usr.sbin.dhcpd
          regexp: 'awx_dhcp_webhook'
          insertbefore: '^}'
          line: "  /etc/dhcp/awx_dhcp_webhook cux,"

      - {name: Restart AppArmor, service: {name: apparmor, state: restarted}}
      when: bHasAppArmor
    when: not bHasDhcp

  - name: Configure DHCP
    block:
    - name: Update DHCP Config
      template: {src: dhcpd.conf.j2, dest: /etc/dhcp/dhcpd.conf, mode: 0644}

    - name: Restart DHCP
      service:
        name: '{{bDistDhcp[HostDist].svc_name|default("isc-dhcp-server")}}'
        state: restarted
    when:
      - DhcpCfgNew is defined
      - DhcpCfgOld[0]|default("null", true) != DhcpCfgNew[0]
  connection: ssh
  vars:
    bDistDhcp:
      Ubuntu: {pkg_name: isc-dhcp-server, svc_name: isc-dhcp-server}
      RedHat: {pkg_name: dhcp-server, svc_name: dhcpd}
    ansible_python_interpreter: '{{icx_awx_mgmt.ssh_interpreter}}'
    ansible_user: '{{awxssh_user|default(prompt_awxcli_user)}}'
    ansible_ssh_pass: '{{awxssh_pass|default(prompt_awxcli_pass)}}'
    ansible_become: true
    ansible_become_method: sudo
    ansible_become_password: '{{awxssh_sudo|default(prompt_awxcli_sudo)
                                           |default(prompt_awxcli_pass)}}'

- name: Update AWX Server DHCP Config
  set_fact:
    icx_awx_mgmt: '{{icx_awx_mgmt|default({})|combine(tCfg)}}'
    cacheable: true
  vars:
    tOldCfg: '{{ZtpCfgCur|rejectattr("name", "==", ZtpInv)|list}}'
    tCfg: {ztp: '{{tOldCfg + DhcpCfgNew}}'}
  when:
    - DhcpCfgNew is defined
    - DhcpCfgOld[0]|default("null", true) != DhcpCfgNew[0]
