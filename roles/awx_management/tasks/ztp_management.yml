---
- name: Get Inventory Info
  uri: {url: '{{AwxApi}}/inventories/{{awx_inventory_id}}/'}
  register: InvInfo

- name: Get User ID
  uri: {url: '{{AwxApi}}/users/?username={{awxlogin_user}}'}
  register: AwxUserId

- name: Get Credentials for This Job
  uri: {url: '{{AwxApi}}/jobs/{{awx_job_id}}/credentials/'}
  register: ThisJobCreds

- name: Store AWX REST API Credential ID
  set_fact: {Credential: "id: {{ThisJobCreds.json.results[idx].id}}"}
  loop: "{{range(0, ThisJobCreds.json.results|length)|list}}"
  loop_control: {index_var: idx}
  register: RestCredentialList
  when: ThisJobCreds.json.results[idx].kind != 'ssh'

- name: Store AWX REST API and SSH Credential IDs
  set_fact: {Credential: "id: {{ThisJobCreds.json.results[idx].id}}"}
  loop: "{{range(0, ThisJobCreds.json.results|length)|list}}"
  loop_control: {index_var: idx}
  register: CredentialList

- name: Set Play Parameters
  set_fact:
    ZtpParams:
      ZtpInstall: '{{IsInstall|bool or IsRegenToken|bool}}'
      ZtpConfigure: '{{IsConfigure|bool or IsReIp|bool}}'
      InstallComponents: '{{IsInstall|bool}}'
      RegenToken: '{{IsRegenToken|bool}}'
      InstallInv: '{{IsConfigure|bool}}'
      CfgInterface: '{{IsReIp|bool or IsConfigure|bool}}'
      CreateTemplates: '{{IsInstall|bool or IsConfigure|bool}}'
      OrgId: '{{InvInfo.json.organization}}'
  vars:
    IsInstall: '{{ThisTemplate.json.name == "ZTP-Install"}}'
    IsConfigure: '{{ThisTemplate.json.name == "ZTP-Configure"}}'
    IsRegenToken: '{{ThisTemplate.json.name == "ZTP-Regen-AuthToken"}}'
    IsReIp: '{{ThisTemplate.json.name == "ZTP-Configure-Server-Address"}}'

- name: Install ZTP Components
  block:
    - {name: Install Required ZTP Components, include_tasks: install_components.yml}

    - {name: Create Default Login Creds, include_tasks: create_default_credentials.yml}
  when: ZtpParams.InstallComponents|bool

- name: Build Template Param List
  include_tasks: create_template_list.yml
  when: ZtpParams.CreateTemplates|bool

- name: Setup App Authentication Token
  include_tasks: create_auth_token.yml
