#! Description: Configure 802.1X global settings.
#! Prompt: [{question_name: 802.1X Default Authentication VLAN@comma, question_description: '', required: false, type: integer, variable: prompt_flexauth_def_vlan, min: 1, max: 4086, default: '', choices: ''}, {question_name: Enable Reauthentication@question, question_description: '', required: false, type: multiplechoice, variable: prompt_flexauth_reauth, min: null, max: null, default: '', choices: yes\nno}, {question_name: Reauthentication-Period@colon, question_description: (in seconds), required: false, type: integer, variable: prompt_flexauth_reauth_period, min: 1, max: 4294967295, default: 3600, choices: ''}, {question_name: 802.1X Max Number of Authentication Attempts@colon, question_description: '', required: false, type: integer, variable: prompt_flexauth_max_reauth_req, min: 1, max: 10, default: 2, choices: ''}, {question_name: 802.1X Max Number of Frame Retransmissions@colon, question_description: '', required: false, type: integer, variable: prompt_flexauth_max_req, min: 1, max: 10, default: 2, choices: ''}, {question_name: 802.1X Tx Timeout, question_description: (in seconds), required: false, type: integer, variable: prompt_flexauth_timeout_tx, min: 1, max: 4294967295, default: 30, choices: ''}, {question_name: 802.1X Timeout Quiet-Period@colon, question_description: (in seconds), required: false, type: integer, variable: prompt_flexauth_timeout_quiet, min: 1, max: 4294967295, default: 60, choices: ''}, {question_name: 802.1X Supplicant Timeout, question_description: (in seconds), required: false, type: integer, variable: prompt_flexauth_timeout_supplicant, min: 1, max: 4294967295, default: 30, choices: ''}]
#! PlaybookVersion: 1.3
# =====================
---
- hosts: all
  connection: network_cli
  gather_facts: no
  module_defaults:
    icx_config:
      parents: authenticatio
  vars:
    ansible_network_os: icx
    ansible_become: true
    ansible_become_method: enable
    ErrParse: '^.*ConnectionError: '
    NoDot1xCmd:
    NoMacAuthCmd:
    Dot1xCmd:
    MacAuthCmd:

  tasks:
  - name: Configure Auth-Default-VLAN
    block:
      - name: Get 802.1X Enabled Status
        icx_command: {commands: show run | include dot1x enable}
        register: Dot1xEnabled

      - name: Get MAC-Authentication Enabled Status
        icx_command: {commands: show run | include mac-authentication enable}
        register: MacAuthEnabled

      - name: Get 802.1X Enabled Interfaces
        icx_command: {commands: show config | include dot1x enable ethe}
        register: Dot1xEnabledInt

      - name: Get 802.1X Port-Control Auto Interfaces
        icx_command: {commands: show config | include dot1x port-control auto ethe}
        register: PortCtrlAutoInt

      - name: Get MAC-Authentication Enabled Interfaces
        icx_command: {commands: show config | include mac-authentication enable ethe}
        register: MacAuthEnabledInt

      - name: Setup 802.1X Disable Command
        set_fact: {NoDot1xCmd: no dot1x enable}
        when: Dot1xEnabled.stdout[0] is defined and Dot1xEnabled.stdout[0] != ''

      - name: Setup 802.1X Enable Command
        set_fact: {Dot1xCmd: dot1x enable}
        when: Dot1xEnabledInt.stdout[0] is defined and Dot1xEnabledInt.stdout[0] != ''

      - name: Setup MAC-Authentication Disable Command
        set_fact: {NoMacAuthCmd: no mac-authentication enable}
        when: MacAuthEnabled.stdout[0] is defined and MacAuthEnabled.stdout[0] != ''

      - name: Setup MAC-Authentication Enable Command
        set_fact: {MacAuthCmd: mac-authentication enable}
        when: MacAuthEnabledInt.stdout[0] is defined and MacAuthEnabledInt.stdout[0] != ''
    
      - name: Configure Default Authentication VLAN
        icx_config:
          lines: |
            {{NoDot1xCmd}}
            {{NoMacAuthCmd}}
            auth-default-vlan {{prompt_flexauth_def_vlan}}
            {{Dot1xCmd}}
            {{MacAuthCmd}}
        register: IcxCfgStatus
        failed_when: false

      - name: Parse Switch Error
        set_fact: {ErrMsg: "{{tStatus|regex_replace('\n')|regex_replace(ErrParse)}}"}
        vars: {tStatus: "{{IcxCfgStatus.module_stderr}}"}
        when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

      - name: Restore 802.1X Interfaces
        icx_config: {lines: '{{Dot1xEnabledInt.stdout[0]}}'}
        register: IcxCfgStatus
        failed_when: false
        when:
          - ErrMsg is not defined
          - Dot1xEnabledInt.stdout[0] is defined
          - Dot1xEnabledInt.stdout[0] != ''

      - name: Parse Switch Error
        set_fact: {ErrMsg: "{{tStatus|regex_replace('\n')|regex_replace(ErrParse)}}"}
        vars: {tStatus: "{{IcxCfgStatus.module_stderr}}"}
        when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

      - name: Restore 802.1X Port-Control Interfaces (Global Config)
        icx_config: {lines: '{{PortCtrlAutoInt.stdout[0]}}'}
        register: IcxCfgStatus
        failed_when: false
        when:
          - ErrMsg is not defined
          - Dot1xEnabledInt.stdout[0] is defined
          - Dot1xEnabledInt.stdout[0] != ''
          - PortCtrlAutoInt.stdout[0] is defined
          - PortCtrlAutoInt.stdout[0] != ''

      - name: Parse Switch Error
        set_fact: {ErrMsg: "{{tStatus|regex_replace('\n')|regex_replace(ErrParse)}}"}
        vars: {tStatus: "{{IcxCfgStatus.module_stderr}}"}
        when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

      - name: Get 802.1X Interface List for Legacy Port-Control Restore
        icx_command: {commands: show dot1x config all | include Configuration}
        register: PortCtrlInt
        when:
          - ErrMsg is not defined
          - Dot1xEnabledInt.stdout[0] is defined
          - Dot1xEnabledInt.stdout[0] != ''
          - PortCtrlAutoInt.stdout[0] is not defined or PortCtrlAutoInt.stdout[0] == ''

      - name: Restore 802.1X Port-Control Interfaces (Legacy)
        icx_config: {lines: '{{tCmd}}', parents: 'interface e {{item.split(" ")[1]}}'}
        register: IcxCfgStatus
        loop: '{{PortCtrlInt.stdout_lines[0]}}'
        failed_when: false
        vars: {tCmd: dot1x port-control auto}
        when:
          - ErrMsg is not defined
          - Dot1xEnabledInt.stdout[0] is defined
          - Dot1xEnabledInt.stdout[0] != ''
          - PortCtrlInt.stdout[0] is defined
          - PortCtrlInt.stdout[0] != ''
          - PortCtrlAutoInt.stdout[0] is not defined or PortCtrlAutoInt.stdout[0] == ''

      - name: Parse Switch Error
        set_fact: {ErrMsg: "{{tStatus|regex_replace('\n')|regex_replace(ErrParse)}}"}
        vars: {tStatus: "{{IcxCfgStatus.module_stderr}}"}
        when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

      - name: Restore MAC-Authentication Interfaces
        icx_config: {lines: '{{MacAuthEnabledInt.stdout[0]}}'}
        register: IcxCfgStatus
        failed_when: false
        when:
          - ErrMsg is not defined
          - MacAuthEnabledInt.stdout[0] is defined
          - MacAuthEnabledInt.stdout[0] != ''

      - name: Parse Switch Error
        set_fact: {ErrMsg: "{{tStatus|regex_replace('\n')|regex_replace(ErrParse)}}"}
        vars: {tStatus: "{{IcxCfgStatus.module_stderr}}"}
        when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1
    when: prompt_flexauth_def_vlan is defined and prompt_flexauth_def_vlan != ''

  - name: Configure Reauthentication
    icx_config: {lines: re-authentication}
    register: IcxCfgStatus
    failed_when: false
    when:
      - ErrMsg is not defined
      - prompt_flexauth_reauth is defined
      - prompt_flexauth_reauth|bool

  - name: Parse Switch Error
    set_fact:
      ErrMsg: "{{IcxCfgStatus.module_stderr|regex_replace('\n')|regex_replace(ErrParse)}}"
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Configure FlexAuth
    icx_config:
      lines: |
        aaa authentication dot1x default radius
        authentication
         reauth-period {{prompt_flexauth_reauth_period|default("3600")}}
         dot1x max-reauth-req {{prompt_flexauth_max_reauth_req|default("2")}}
         dot1x max-req {{prompt_flexauth_max_req|default("2")}}
         dot1x timeout tx-period {{prompt_flexauth_timeout_tx|default("30")}}
         dot1x timeout quiet-period {{prompt_flexauth_timeout_quiet|default("60")}}
         dot1x timeout supplicant {{prompt_flexauth_timeout_supplicant|default("30")}}
      parents:
      save_when: changed
    register: IcxCfgStatus
    failed_when: false
    when: ErrMsg is not defined

  - name: Parse Switch Error
    set_fact:
      ErrMsg: "{{IcxCfgStatus.module_stderr|regex_replace('\n')|regex_replace(ErrParse)}}"
    when: IcxCfgStatus.rc is defined and IcxCfgStatus.rc == 1

  - name: Display Switch Error
    assert: {that: ErrMsg is not defined, fail_msg: '{{ErrMsg.split(NewlineVar)}}'}
    vars: {NewlineVar: "\r"}
    when: ErrMsg is defined
